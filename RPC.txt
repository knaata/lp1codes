import java.util.*;
import java.io.*;
import java.net.*;

public class server{
    public static void main(String args[]) throws Exception{
        ServerSocket sersock=new ServerSocket(3000);
        System.out.println("Server is busy");
        Socket sock= sersock.accept();

        BufferedReader keyRead= new BufferedReader(new InputStreamReader(System.in));
        OutputStream ostream= sock.getOutputStream();
        PrintWriter pwrite=new PrintWriter(ostream, true);
        InputStream istream=sock.getInputStream();
        BufferedReader receiveRead=new BufferedReader(new InputStreamReader(istream));

        string fun;
        int a,b,c;
        while(true){
            fun=receiveRead.readLine();
            if(fun!=null){
                System.out.println("RPC started!");
            }

            a=Integer.parseInt(receiveRead.readLine());
            System.out.println("Parameter 1:"+ a);
            b=Integer.parseInt(receiveRead.readLine());
            System.out.println("Parameter 2:"+ b);
            c=a*b;

            System.out.println("Calculation done. Sending result as message!");
            pwrite.println("Result is: Multiplication=" +c);
            System.out.flush();
        }
    }
}


import java.util.*;
import java.io.*;
import java.net.*;

public class client{
    public static void main(String[] args) throws Exception
    {  Socket sock= new Socket("127.0.0.1",3000);
    
       BufferedReader keyRead= new BufferedReader(new InputStreamReader(System.in));
       OutputStream ostream =sock.getOutputStream();
       PrintWriter pwrite= new PrintWriter(ostream,true);
       InputStream istream=sock.getInputStream();
       BufferedReader receiveRead= new BufferedReader(new InputStreamReader(istream));

       System.out.println("Client is Ready!");
       String receiveMessage, sendMessage,temp;
       while(true){
        System.out.println("Print any key to start RPC");
        temp=keyRead.readLine();
        sendMessage=temp.toLowerCase();
        pwrite.println(sendMessage);

        System.out.println("Enter first parameter:");
        sendMessage= keyRead.readLine();
        pwrite.println(sendMessage);
        System.out.println("Enter second parameter:");
        sendMessage= keyRead.readLine();
        pwrite.println(sendMessage);

        System.out.println("Marshalling parameters and sending message");
        System.out.flush();

        if((receiveMessage=receiveRead.readLine())!=null){
            System.out.println(receiveMessage);
        }
       }


    }
}